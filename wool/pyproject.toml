[build-system]

build-backend = "hatchling.build"
requires = [
    "debugpy",
    "hatchling",
    "packaging",
    "GitPython",
    "toml",
    "typing-extensions",
]

[project]
authors = [{ name = "Conrad Bzura", email = "conrad@wool.io" }]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    "cloudpickle",
    "grpcio",
    "protobuf",
    "shortuuid",
    "tblib",
    "typing-extensions",
    "zeroconf",
]
description = "A Python framework for distributed multiprocessing."
dynamic = ["version"]
license = { file = "../LICENSE" }
maintainers = [{ email = "maintainers@wool.io" }]
name = "wool"
readme = "README.md"
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "debugpy",
    "hypothesis",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-grpc-aio~=0.2.0",
    "pytest-mock",
    "ruff",
]

[project.scripts]
wool = "wool.cli:cli"

[tool.hatch.build.hooks.protobuf]
dependencies = ["hatch-protobuf"]
generate_grpc = true
generate_pyi = true
output_path = "src/wool/_protobuf"
proto_paths = ["protobuf"]

[tool.hatch.build.targets.sdist]
sources = ["src"]
include = ["wool"]

[tool.hatch.build.targets.wheel]
sources = ["src"]
include = ["wool"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.custom]
path = "../build-hooks/build.py"

[tool.hatch.metadata.hooks.custom]
path = "../build-hooks/metadata.py"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov --cov-config=.coveragerc"

[tool.ruff]
line-length = 89

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true

[tool.ruff.lint.isort]
combine-as-imports = false
force-single-line = true
known-first-party = ["wool"]
