name: Cut release
description: Cut a release branch and publish a release-candidate.

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        options: 
          - major
          - minor
        default: minor

jobs:
  verify-code-changes:
    name: Verify code has changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Get touched files
        id: get-touched-files
        uses: ./.github/actions/get-touched-files
        with:
          pathspec: 'src/ pyproject.toml'
      - name: Fail if code hasn't changed
        if: ${{ ! steps.get-touched-files.outputs.touched }}
        run: |
          echo "ERROR: No code changes detected."
          exit 1

  cut-release:
    name: Cut ${{ github.event.inputs.release-type }} release
    needs: verify-code-changes
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      version: ${{ steps.cut-release-branch.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/get-wool-labs-app-token
        id: get-wool-labs-app-token
        with:
          app-id: ${{ secrets.WOOL_LABS_APP_ID }}
          app-installation-id: ${{ secrets.WOOL_LABS_INSTALLATION_ID }}
          app-private-key: ${{ secrets.WOOL_LABS_PRIVATE_KEY }}
      - name: Verify main is up to date
        run: |
          git fetch origin main
          git fetch origin master
          if [[ $(git rev-list --count --left-only origin/master..origin/main) -gt 0 ]]; then
            echo "Error: main is not up to date with master" >&2
            exit 1
          fi
      - name: Create release branch
        id: cut-release-branch
        run: |
          version=$(.github/scripts/cut-release.sh ${{ github.event.inputs.release-type }} release)
          echo "Release candidate: $version"
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Checkout release
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Tag version
        run: |
          git tag ${{ steps.cut-release-branch.outputs.version }}
          git push origin ${{ steps.cut-release-branch.outputs.version }}
      - name: Create pull request
        env:
          GH_TOKEN: ${{ steps.get-wool-labs-app-token.outputs.access-token }}
        run: |
          if $(.github/scripts/release-pr-exists.sh); then
              echo "Release PR already exists. Exiting..."
              exit 0
          fi
          workflow=$(echo '${{ github.workflow }}' | tr '[:upper:]' '[:lower:]')
          body='Auto-generated by the ['$workflow'](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) workflow.'
          version=$(.github/scripts/bump-version.sh minor ${{ steps.cut-release-branch.outputs.version }})
          gh pr create -B master -H release --title 'Release '$version'' --body "$body"
  
  build-release:
    name: Build release
    needs: cut-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-release
        with:
          version: ${{ needs.cut-release.outputs.version }}
      
  publish-github-release:
    name: Publish release to GitHub
    needs:
      - cut-release
      - build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/publish-github-release
        with:
          version: ${{ needs.cut-release.outputs.version }}

  publish-pypi-release:
    name: Publish release to PyPI
    needs:
      - cut-release
      - build-release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/publish-pypi-release
        with:
          version: ${{ needs.cut-release.outputs.version }}
          pypi-token: ${{ secrets.PYPI_TOKEN }}
